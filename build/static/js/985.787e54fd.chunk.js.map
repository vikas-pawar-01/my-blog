{"version":3,"file":"static/js/985.787e54fd.chunk.js","mappings":"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","sources":["shared/components/Modal.js","shared/pages/Registration.js","shared/hooks/http-hook.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["const Modal = (props) => {\r\n    return (\r\n        <div className=\"center\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport Modal from \"../components/Modal\";\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\n\r\nconst Registration = () => {\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const [successMessage, setSuccessMessage] = useState();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const refName = useRef('');\r\n    const refEmail = useRef();\r\n    const refPhone = useRef();\r\n    const refPassword = useRef();\r\n    const refConfirmPassword = useRef();\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setSuccessMessage();\r\n            setErrorMessage();\r\n            clearError();\r\n        }, 10000);\r\n    });\r\n\r\n    const clearForm = () => {\r\n        refName.current.value = '';\r\n        refEmail.current.value = '';\r\n        refPhone.current.value = '';\r\n        refPassword.current.value = '';\r\n        refConfirmPassword.current.value = '';\r\n    }\r\n\r\n    const success = () => {\r\n        setSuccessMessage('User registered successfully!');\r\n        clearForm();\r\n    }\r\n\r\n    const handleRegistration = async event => {\r\n        event.preventDefault();\r\n\r\n        let name = refName.current.value;\r\n        let email = refEmail.current.value;\r\n        let phone = refPhone.current.value;\r\n        let password = refPassword.current.value;\r\n        let confirmPassword = refConfirmPassword.current.value;\r\n\r\n        if (password !== confirmPassword) {\r\n            setErrorMessage('Password and Confirm Password should be match!');\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            const dataResponse = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/user/registration`,\r\n                'POST',\r\n                JSON.stringify(\r\n                    {\r\n                        name: name,\r\n                        email: email,\r\n                        phone: phone,\r\n                        password: password\r\n                    }\r\n                ),\r\n                {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            );\r\n            // auth.login(dataResponse.userId, dataResponse.token);\r\n            // navigate(\"/login\");\r\n            success();\r\n        } catch (err) { }\r\n    }\r\n\r\n    return (\r\n        <Modal>\r\n            <Container fluid=\"sm\">\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col xs lg=\"6\">\r\n                        <h2>Registration Form:</h2>\r\n                        {errorMessage && <div className=\"alert alert-danger\" role=\"alert\">\r\n                            {errorMessage}\r\n                        </div>}\r\n\r\n                        {error && <div className=\"alert alert-danger\" role=\"alert\">\r\n                            {error}\r\n                        </div>}\r\n\r\n                        {successMessage && <div className=\"alert alert-success\" role=\"alert\">\r\n                            {successMessage}\r\n                        </div>}\r\n\r\n                        <Form onSubmit={handleRegistration}>\r\n                            <Form.Group className=\"mb-3\">\r\n\r\n                                <Form.Label htmlFor=\"name\">Name</Form.Label>\r\n                                <Form.Control ref={refName} id=\"name\" type=\"text\" placeholder=\"Name\" required />\r\n\r\n                                <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                                <Form.Control ref={refEmail} type=\"email\" placeholder=\"Email\" required />\r\n\r\n                                <Form.Label htmlFor=\"phone\">Phone Number</Form.Label>\r\n                                <Form.Control ref={refPhone} type=\"text\" placeholder=\"Phone Number\" required />\r\n\r\n                                <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                                <Form.Control minLength=\"5\" ref={refPassword} type=\"password\" placeholder=\"Password\" required />\r\n\r\n                                <Form.Label htmlFor=\"cpassword\">Confirm Password</Form.Label>\r\n                                <Form.Control ref={refConfirmPassword} id=\"cpassword\" type=\"password\" placeholder=\"Confirm Password\" required />\r\n\r\n                                <Button type=\"submit\" className=\"btn-margin-top\" variant=\"primary\">\r\n                                    Register\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default Registration;","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    const activeHttpRequests = useRef([]);\r\n\r\n    const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setIsLoading(true);\r\n\r\n        const httpAbortCtrl = new AbortController();\r\n        activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n        try {\r\n            const response = await fetch(\r\n                url,\r\n                {\r\n                    method,\r\n                    body,\r\n                    headers,\r\n                    signal: httpAbortCtrl.signal\r\n                }\r\n            );\r\n\r\n            const responseData = await response.json();\r\n\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(\r\n                reqCtrl => reqCtrl !== httpAbortCtrl\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error(responseData.message);\r\n            }\r\n\r\n            setIsLoading(false);\r\n            return responseData;\r\n        } catch (err) {\r\n            setError(err.message);\r\n            setIsLoading(false);\r\n            throw err;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n        };\r\n    }, []);\r\n\r\n    return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["props","className","children","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","useHttpClient","errorMessage","setErrorMessage","successMessage","setSuccessMessage","refName","useNavigate","refEmail","refPhone","refPassword","refConfirmPassword","setTimeout","success","value","handleRegistration","event","preventDefault","name","email","phone","password","confirmPassword","process","JSON","stringify","Modal","Container","fluid","Row","Col","xs","lg","role","Form","onSubmit","htmlFor","ref","id","type","placeholder","required","minLength","Button","variant","React","bsPrefix","as","Component","prefix","useBootstrapPrefix","suffix","_jsx","classNames","displayName","defaultProps","decoratedBsPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","brkPoint","cols","propValue","infix"],"sourceRoot":""}