{"version":3,"sources":["features/components/store/Counter.js","features/components/context/Counter.js","features/pages/Recursion.js","features/pages/Timer.js","features/pages/Toggle.js","features/pages/Timeout.js","features/components/recoil/counterState.js","features/components/recoil/incrementByState.js","features/components/recoil/CounterButton.js","features/components/mobx/CounterMobx.js","shared/pages/Features.js","features/components/mobx/Counter.js","shared/components/Modal.js"],"names":["Counter","count","useSelector","state","counter","value","dispatch","useDispatch","amount","useRef","react_default","a","createElement","Fragment","Button","className","variant","onClick","increment","decrement","Form","Control","type","ref","placeholder","incrementByAmount","current","userCtx","useContext","CounterContext","Recursion","myObject","b","age","ol","d","total","calculateAge","myObj","sum","obj","JSON","stringify","Timer","_useState","useState","_useState2","Object","slicedToArray","timer","setTimer","useEffect","interval","setInterval","date","Date","strDate","concat","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","setTimeout","clearInterval","Toggle","change","setChange","Timeout","textClass","setTextClass","_useState3","_useState4","buttonClass","setButtonClass","counterState","atom","key","default","incrementByState","CounterButton","_useRecoilState","useRecoilState","_useRecoilState2","numberOfClicks","setNumberOfClicks","_useRecoilState3","_useRecoilState4","incrementBy","setIncrementBy","onChange","e","Number","target","CounterMobx","observer","_ref","_this","this","classCallCheck","makeObservable","observable","action","Features","Modal","pages_Timer","store_Counter","context_Counter","CounterButton_CounterButton","pages_Recursion","pages_Toggle","pages_Timeout","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","props","children"],"mappings":"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","file":"static/js/3.02803570.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { decrement, increment, incrementByAmount } from \"./counterSlice\";\r\n\r\nconst Counter = () => {\r\n\r\n    const count = useSelector((state) => state.counter.value)\r\n    const dispatch = useDispatch()\r\n\r\n    const amount = useRef();\r\n\r\n    return (\r\n        <>\r\n            <h2>State Management Using Redux:</h2>\r\n            <Button className=\"btn-padding\" variant=\"success\" onClick={() => dispatch(increment())}>+</Button>\r\n\r\n            <span>{count}</span>\r\n\r\n            <Button className=\"btn-padding\" variant=\"danger\" onClick={() => dispatch(decrement())}>-</Button>\r\n\r\n            <Form.Control type=\"number\" ref={amount} placeholder=\"Enter amount\" />\r\n\r\n            <Button className=\"btn-margin-top\" variant=\"primary\" onClick={() => dispatch(incrementByAmount(amount.current.value))}>Add Amount</Button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Counter;","\r\nimport React, { useContext, useRef } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CounterContext from \"./counter-context\";\r\n\r\nconst Counter = () => {\r\n\r\n    const userCtx = useContext(CounterContext);\r\n\r\n    const amount = useRef();\r\n\r\n    return (\r\n        <>\r\n            <h2>State Management with Context</h2>\r\n            <Button className=\"btn-padding\" variant=\"success\" onClick={() => userCtx.increment()}>+</Button>\r\n\r\n            <span>{userCtx.counter}</span>\r\n\r\n            <Button className=\"btn-padding\" variant=\"danger\" onClick={() => userCtx.decrement()}>-</Button>\r\n\r\n            <Form.Control type=\"number\" ref={amount} placeholder=\"Enter amount\" />\r\n            <Button className=\"btn-margin-top\" variant=\"primary\" onClick={() => userCtx.incrementByAmount(amount.current.value)}>Add Amount</Button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Counter;","import React from 'react';\r\n\r\nconst Recursion = () => {\r\n    const myObject = {\r\n        \"a\": 1,\r\n        \"b\": [2, 3],\r\n        \"age\": 10,\r\n        ol: {\r\n            a: 5,\r\n            age: 20\r\n        },\r\n        \"d\": { \"age\": 30 }\r\n    };\r\n\r\n    let total = 0;\r\n    const calculateAge = (myObj, sum) => {\r\n\r\n        for (let obj in myObj) {\r\n            if (obj === 'age') {\r\n                total += myObj['age'];\r\n            }\r\n\r\n            if (typeof myObj[obj] == 'object' && myObj[obj] != null) {\r\n                calculateAge(myObj[obj], sum);\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateAge(myObject, 0);\r\n\r\n    return (\r\n        <>\r\n            <h2>Recurssive Function: Nested Age Total = {total}</h2>\r\n            <pre>{JSON.stringify(myObject, null, 2)}</pre>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Recursion;","import React, { useEffect, useState } from \"react\";\r\n\r\nconst Timer = () => {\r\n\r\n    const [timer, setTimer] = useState();\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const date = new Date();\r\n            const strDate = `${date.getDate()}/${date.getMonth()}/${date.getFullYear()} \r\n            ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n            setTimer(strDate);\r\n        }, 1000);\r\n\r\n        setTimeout(() => {\r\n            clearInterval(interval);\r\n        }, 1000000);\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <h2>Timer: {timer}</h2>\r\n    );\r\n}\r\n\r\nexport default Timer;","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Toggle = () => {\r\n    const [change, setChange] = useState(false);\r\n    const handleChange = () => {\r\n        setChange(!change);\r\n    }\r\n    return (\r\n        <>\r\n            <p>Toggle Text:</p>\r\n            {!change && <p>Hello World.</p>}\r\n            {change && <p>Welcome.</p>}\r\n            <Button onClick={handleChange}>Changed!</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Toggle;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Timeout = () => {\r\n    const [textClass, setTextClass] = useState('black');\r\n    const [buttonClass, setButtonClass] = useState('show')\r\n\r\n    const hideButton = () => setTimeout(() => {\r\n        setButtonClass('hide');\r\n    }, 1000);\r\n\r\n    const showButton = () => setTimeout(() => {\r\n        setButtonClass('show');\r\n        setTextClass('black');\r\n    }, 3000);\r\n\r\n    const handleClick = () => {\r\n        setTextClass('red');\r\n        hideButton();\r\n        showButton();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <p className={textClass}>\r\n                When you click on button, < br />\r\n                text turns red, < br />\r\n                after 1 sec, button disappears, < br />\r\n                after 3 seconds button reappaears and text turns black again\r\n            </p>\r\n\r\n            <Button className={buttonClass} onClick={handleClick}>Click!</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Timeout;\r\n","import React from 'react';\r\nimport { atom } from \"recoil\";\r\n\r\nexport const counterState = atom({\r\n    key: 'counterState',\r\n    default: 0\r\n});","import React from 'react';\r\nimport { atom } from \"recoil\";\r\n\r\nexport const incrementByState = atom({\r\n    key: 'incrementByState',\r\n    default: 1\r\n});","import React from 'react';\r\nimport { Form, Button } from \"react-bootstrap\"\r\nimport { useRecoilState } from \"recoil\";\r\nimport { counterState } from \"./counterState\";\r\nimport { incrementByState } from \"./incrementByState\";\r\n\r\nexport const CounterButton = () => {\r\n    const [numberOfClicks, setNumberOfClicks] = useRecoilState(counterState);\r\n    const [incrementBy, setIncrementBy] = useRecoilState(incrementByState);\r\n\r\n    return (\r\n        <>\r\n            <h2>State Management with Recoil</h2>\r\n            <p>You have clicked button {numberOfClicks} times.</p>\r\n            <Form.Control value={incrementBy} onChange={e => setIncrementBy(Number(e.target.value))} type=\"number\" placeholder=\"Enter number\" />\r\n            < br />\r\n            <Button onClick={() => setNumberOfClicks(numberOfClicks + incrementBy)}>Set By Number</Button>\r\n        </>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport const CounterMobx = observer(({ counter }) => {\r\n    const [incrementBy, setIncrementBy] = useState(1);\r\n\r\n    return (\r\n        <>\r\n            <h2>State Management with Mobx</h2>\r\n            <p>You have clicked button {counter.numberOfClicks} times.</p>\r\n            <Form.Control value={incrementBy} onChange={e => setIncrementBy(Number(e.target.value))} type=\"number\" placeholder=\"Enter number\" />\r\n            < br />\r\n            <Button onClick={() => counter.increment(incrementBy)}>Set By Number</Button>\r\n        </>\r\n    )\r\n});","import React from 'react';\r\nimport Redux from \"../../features/components/store/Counter\";\r\nimport Context from \"../../features/components/context/Counter\";\r\nimport Recursion from \"../../features/pages/Recursion\";\r\nimport Timer from \"../../features/pages/Timer\";\r\nimport Modal from \"../components/Modal\";\r\nimport Toggle from \"../../features/pages/Toggle\";\r\nimport Timeout from \"../../features/pages/Timeout\";\r\nimport { CounterButton } from \"../../features/components/recoil/CounterButton\";\r\nimport { CounterMobx } from \"../../features/components/mobx/CounterMobx\";\r\nimport { Counter } from \"../../features/components/mobx/Counter\";\r\n\r\nconst counter = new Counter();\r\n\r\nconst Features = () => {\r\n    return (\r\n        <Modal>\r\n            <Timer />\r\n            <hr />\r\n            <Redux />\r\n            <hr />\r\n            <Context />\r\n            <hr />\r\n            <CounterButton />\r\n            <hr />\r\n            <CounterMobx counter={counter} />\r\n            <hr />\r\n            <Recursion />\r\n            <hr />\r\n            <Toggle />\r\n            <hr />\r\n            <Timeout />\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Features;","import React from 'react';\r\nimport { makeObservable, observable, action } from 'mobx';\r\n\r\nexport class Counter {\r\n    numberOfClicks = 0;\r\n\r\n    constructor() {\r\n        makeObservable(this, {\r\n            numberOfClicks: observable,\r\n            increment: action\r\n        });\r\n    }\r\n\r\n    increment = amount => {\r\n        this.numberOfClicks += amount;\r\n    }\r\n}","import React from 'react';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <div className=\"center\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;\r\n"],"sourceRoot":""}